pipeline {
  agent { 
     docker { image 'hashicorp/terraform:0.11.10' 
     args '--entrypoint="" -v $WORKSPACE:/workspace -w /workspace'
        }
      }
  options { disableConcurrentBuilds() 
            timestamps() 
  }
  stages {
//     stage('Clone') {
//       steps {
//           git credentialsId: 'github', url: 'git@github.com:rayman-g/jbox.git'
//         }
//      }
    stage('TF Plan') {
       steps {
           sh 'terraform init -input=false "${env.ENVIRONMENT}/${env.REGION}/${env.JOB_BASE_NAME}"'
           sh 'terraform plan -out buildplan -input=false "${env.ENVIRONMENT}/${env.REGION}/${env.JOB_BASE_NAME}"'
         }
       }
    stage('Approval') {
      steps {
        script {
          def userInput = input(id: 'confirm', message: 'Apply Terraform?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Apply terraform', name: 'confirm'] ])
        }
      }
    }
 stage('TF Apply') {
      steps {
          sh 'terraform apply -auto-approve -input=false buildplan'
      }
    }
  }
}
